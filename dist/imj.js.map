{"version":3,"sources":["../src/imj.js"],"names":["CloneMode","None","Unknown","Object","Array","defaultSelector","x","arrayEqual","arr1","arr2","length","isArray","every","item","index","Modifier","value","args","original","assign","__arrayProxy","method","clone","modifiedArray","mutate","slice","some","orderBy","selector","sort","a","b","aValue","bValue","reverse","comparer","filter","predicate","from","to","shift","prev","next","remove","keys","map","tryExtractPropNameFromAccessor","Set","Map","key","has","sortedKeys","splice","pop","forEach","keep","reduce","set","get","obj","unshift","values","concat","count","newItems","result","__result","unset","props","prop","cloneMode","checker","modifier","Date","getTime","push","newProps","finalProps","mapper","clonedValue","swap","prop1","prop2","temp","replace","findWhat","replaceWith","toggle","add","d","getFullYear","years","getMonth","months","getDate","days","getHours","hours","getMinutes","minutes","getSeconds","seconds","getMilliseconds","milliseconds","current","fallback","propName","processArgs","state","nextState","subSpecs","path","join","split","arg","$$","processWhen","targetPath","valueToCompare","targetSpecs","targetValue","getValue","processSpecs","processArrayItemSpecs","many","defaultItemSpecs","undefined","found","hasChange","nextArray","itemSpecs","newItem","processIf","condition","$then","$else","isTruth","processVar","entries","varName","processSelf","cloneObject","processNormalProp","returnSpecs","returnValue","Error","imj","isNestedProps","prevPropValue","nextPropValue","stack","container","i","last","specs","isSpecialProp","nextSpecs","test","target","inputs","$","$input"],"mappings":"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","sourcesContent":["const CloneMode = {\n  None: 0,\n  Unknown: 1,\n  Object: 2,\n  Array: 3\n};\nconst defaultSelector = x => x;\n\nfunction arrayEqual(arr1, arr2) {\n  if (arr1 === arr2) return true;\n  if (!arr1 || !arr2 || arr1.length !== arr2.length) return false;\n  if (!Array.isArray(arr1) || Array.isArray(arr2)) return false;\n  return arr1.every((item, index) => arr2[index] === item);\n}\n\nclass Modifier {\n  constructor(value, args) {\n    this.original = value;\n    this.value = value;\n    Object.assign(this, args, {\n      __arrayProxy: (method, clone, args = []) => {\n        let modifiedArray;\n        return this.mutate(\n          CloneMode.None,\n          original => {\n            if (typeof original === \"undefined\" || original === null) {\n              original = [];\n            }\n            modifiedArray = (clone ? original.slice(0) : original)[method](\n              ...args\n            );\n            return (\n              modifiedArray.length !== original.length ||\n              modifiedArray.some((item, index) => item !== original[index])\n            );\n          },\n          () => modifiedArray\n        );\n      },\n\n      orderBy: selector => {\n        return this.sort((a, b) => {\n          const aValue = selector(a);\n          const bValue = selector(b);\n          if (aValue > bValue) {\n            return 1;\n          }\n          return aValue === bValue ? 0 : -1;\n        });\n      },\n\n      reverse: () => {\n        return this.__arrayProxy(\"reverse\", true);\n      },\n\n      sort: comparer => {\n        return this.__arrayProxy(\"sort\", true, [comparer]);\n      },\n\n      filter: predicate => {\n        return this.__arrayProxy(\"filter\", false, [predicate]);\n      },\n\n      slice: (from, to) => {\n        return this.__arrayProxy(\"slice\", false, [from, to]);\n      },\n\n      shift: () => {\n        return this.mutate(\n          CloneMode.Array,\n          prev => prev && prev.length,\n          next => next.shift()\n        );\n      },\n\n      remove: (...keys) => {\n        keys = keys.map(tryExtractPropNameFromAccessor);\n\n        return this.mutate(\n          CloneMode.Unknown,\n          prev =>\n            prev &&\n            (prev instanceof Set || prev instanceof Map\n              ? keys.some(key => prev.has(key))\n              : keys.some(key => key in prev)),\n          next => {\n            if (Array.isArray(next)) {\n              const sortedKeys = keys.sort();\n              while (sortedKeys.length) {\n                next.splice(sortedKeys.pop(), 1);\n              }\n            } else if (next instanceof Map || next instanceof Set) {\n              keys.forEach(key => next.delete(key));\n            } else {\n              keys.forEach(key => delete next[key]);\n            }\n          }\n        );\n      },\n\n      pop: () => {\n        return this.mutate(\n          CloneMode.Array,\n          prev => prev && prev.length,\n          next => next.pop()\n        );\n      },\n\n      keep: (...keys) => {\n        keys = keys.map(tryExtractPropNameFromAccessor);\n        return this.mutate(\n          CloneMode.Unknown,\n          () => true,\n          prev => prev,\n          next => {\n            if (next instanceof Map) {\n              return keys.reduce((map, key) => {\n                map.set(key, next.get(key));\n                return map;\n              }, new Map());\n            }\n\n            if (Array.isArray(next)) {\n              return keys.map(key => next[key]);\n            }\n\n            if (typeof next === \"undefined\" || next === null) {\n              return {};\n            }\n\n            return keys.reduce((obj, key) => {\n              obj[key] = next[key];\n              return obj;\n            }, {});\n          }\n        );\n      },\n\n      unshift: (...values) => {\n        return this.mutate(\n          CloneMode.None,\n          () => !!values.length,\n          next => values.concat(next || [])\n        );\n      },\n\n      splice: (index, count, ...newItems) => {\n        return this.mutate(\n          CloneMode.Array,\n          prev => prev && ((count && prev.length > index) || newItems.length),\n          next => next.splice(index, count, ...newItems)\n        );\n      },\n\n      result: () => this.__result,\n\n      unset: (...props) => {\n        props = props.map(tryExtractPropNameFromAccessor);\n        return this.mutate(\n          CloneMode.Unknown,\n          prev => prev && props.some(prop => prop in prev),\n          next => props.forEach(prop => delete next[prop])\n        );\n      },\n\n      mutate: (cloneMode, checker, modifier, selector = defaultSelector) => {\n        let value = this.value;\n\n        // do nothing\n        if (!checker(value)) {\n          return this;\n        }\n\n        if (cloneMode && value === this.original) {\n          if (typeof value === \"undefined\" || value === null) {\n            value = cloneMode === CloneMode.Array ? [] : {};\n          } else if (Array.isArray(value)) {\n            value = selector(value).slice(0);\n          } else if (value instanceof Date) {\n            value = new Date(value.getTime());\n          } else if (value instanceof Set) {\n            value = new Set(selector(value));\n          } else if (value instanceof Map) {\n            value = new Map(selector(value));\n          } else if (typeof value === \"object\") {\n            value = Object.assign({}, selector(value));\n          }\n        }\n\n        const next = modifier(value);\n        if (cloneMode) {\n          this.value = value;\n          this.__result = next;\n        } else {\n          this.value = next;\n        }\n\n        return this;\n      },\n\n      push: (...values) => {\n        return this.mutate(\n          CloneMode.None,\n          () => values.length,\n          next => [].concat(next || []).concat(values)\n        );\n      },\n\n      assign: (...newProps) => {\n        const finalProps = Object.assign({}, ...newProps);\n        return this.mutate(\n          CloneMode.Object,\n          prev =>\n            !prev ||\n            Object.keys(finalProps).some(key => finalProps[key] !== prev[key]),\n          next => Object.assign(next, finalProps)\n        );\n      },\n\n      map: mapper => {\n        let clonedValue;\n        return this.mutate(\n          CloneMode.None,\n          prev => {\n            if (!prev) return true;\n            clonedValue = prev.map(mapper);\n            return !arrayEqual(clonedValue, prev);\n          },\n          () => clonedValue\n        );\n      },\n\n      swap: (prop1, prop2) =>\n        this.mutate(\n          CloneMode.Unknown,\n          prev => !prev || prev[prop1] !== prev[prop2],\n          next => {\n            const temp = next[prop1];\n            next[prop1] = next[prop2];\n            next[prop2] = temp;\n          }\n        ),\n\n      replace: (findWhat, replaceWith) =>\n        this.mutate(\n          CloneMode.None,\n          () => true,\n          next => next.replace(findWhat, replaceWith)\n        ),\n\n      toggle: () => {\n        this.value = !this.value;\n        return this;\n      },\n\n      add: (value = 1) => {\n        if (\n          this.value instanceof Date ||\n          (typeof this.value === \"string\" && typeof value !== \"string\")\n        ) {\n          const d = new Date(this.value);\n          this.value = new Date(\n            d.getFullYear() + (value.years || 0),\n            d.getMonth() + (value.months || 0),\n            d.getDate() + (value.days || 0),\n            d.getHours() + (value.hours || 0),\n            d.getMinutes() + (value.minutes || 0),\n            d.getSeconds() + (value.seconds || 0),\n            d.getMilliseconds() + (value.milliseconds || 0)\n          );\n        } else {\n          this.value += value;\n        }\n        return this;\n      },\n\n      current: () => this.value\n    });\n  }\n}\n\nfunction tryExtractPropNameFromAccessor(prop, fallback) {\n  if (typeof prop === \"function\" && prop.propName) {\n    return prop.propName;\n  }\n  return typeof fallback === \"function\" ? fallback(prop) : prop;\n}\n\nfunction processArgs(state, nextState, args, prop, subSpecs, path) {\n  (Array.isArray(subSpecs) ? subSpecs.join(\" \") : subSpecs)\n    .split(/\\s+/)\n    .forEach((arg, index) => (args[arg] = args.$$[index]));\n  return nextState;\n}\n\nfunction processWhen(state, nextState, args, prop, subSpecs, path) {\n  const [targetPath, valueToCompare, targetSpecs] = subSpecs;\n  const targetValue = getValue(targetPath, { value: nextState, ...args });\n  if (targetValue === valueToCompare) {\n    nextState = processSpecs(nextState, targetSpecs, args, path + \".\");\n  }\n  return nextState;\n}\n\nfunction processArrayItemSpecs(state, nextState, args, prop, subSpecs, path) {\n  if (Array.isArray(nextState)) {\n    const many = prop === \"$many\";\n    const defaultItemSpecs =\n      typeof subSpecs === \"function\" ? undefined : subSpecs;\n    let found = false;\n    let hasChange = false;\n    const nextArray = nextState.map((item, index) => {\n      if (found && !many) {\n        return item;\n      }\n      const itemSpecs =\n        defaultItemSpecs || subSpecs({ value: item, index, ...args });\n      if (!itemSpecs) return item;\n      found = true;\n      const newItem = processSpecs(item, itemSpecs, args, path + \".\" + index);\n      if (newItem !== item) {\n        hasChange = true;\n      }\n      return newItem;\n    });\n    if (hasChange) {\n      nextState = nextArray;\n    }\n  }\n  return nextState;\n}\n\nfunction processIf(state, nextState, args, prop, subSpecs, path) {\n  const [condition, $then, $else] = subSpecs;\n  const isTruth =\n    typeof condition === \"function\"\n      ? condition({ value: nextState, ...args })\n      : condition;\n\n  if (isTruth) {\n    if ($then) {\n      nextState = processSpecs(nextState, $then, args, path + \".\");\n    }\n  } else if ($else) {\n    nextState = processSpecs(nextState, $else, args, path + \".\");\n  }\n  return nextState;\n}\n\nfunction processVar(state, nextState, args, prop, subSpecs, path) {\n  if (typeof subSpecs === \"function\") {\n    Object.assign(args, subSpecs({ value: nextState, ...args }));\n  } else {\n    Object.entries(subSpecs).forEach(([varName, path]) => {\n      path = tryExtractPropNameFromAccessor(path);\n      args[varName] =\n        typeof path === \"function\"\n          ? path({ value: nextState, ...args })\n          : getValue(path, nextState);\n    });\n  }\n  return nextState;\n}\n\nfunction processSelf(state, nextState, args, prop, subSpecs, path) {\n  let modifier = new Modifier(nextState, args);\n  nextState = subSpecs(modifier);\n  if (modifier && modifier.original !== modifier.value) {\n    nextState = modifier.value;\n  }\n\n  return nextState;\n}\n\nfunction cloneObject(state) {\n  return Array.isArray(state)\n    ? state.slice(0)\n    : state instanceof Map\n    ? new Map(state)\n    : Object.assign({}, state);\n}\n\nfunction processNormalProp(\n  state,\n  nextState,\n  args,\n  prop,\n  subSpecs,\n  returnSpecs,\n  returnValue,\n  path\n) {\n  if (\n    typeof subSpecs === \"object\" ||\n    typeof subSpecs === \"string\" ||\n    Array.isArray(subSpecs) ||\n    typeof subSpecs === \"function\"\n  ) {\n    // valid specs type\n  } else {\n    throw new Error(\n      `Invalid specs: ${path +\n        prop}. Sub specs should be object, array or function`\n    );\n  }\n\n  if (returnSpecs && typeof subSpecs !== \"function\") {\n    returnValue[prop] = imj(subSpecs);\n    return nextState;\n  }\n\n  // console.log(returnSpecs, prop, subSpecs);\n\n  const props = Array.isArray(prop)\n    ? prop.map(tryExtractPropNameFromAccessor)\n    : tryExtractPropNameFromAccessor(prop).split(\".\");\n  const isNestedProps = props.length > 1;\n\n  prop = props[0];\n  let modifier;\n\n  const prevPropValue = isNestedProps\n    ? getValue(props, nextState)\n    : nextState[prop];\n  let nextPropValue;\n\n  if (typeof subSpecs === \"function\") {\n    modifier = new Modifier(prevPropValue, args);\n    nextPropValue = subSpecs(modifier);\n  } else if (typeof subSpecs === \"string\") {\n    nextPropValue = getValue(subSpecs, args);\n  } else {\n    nextPropValue = processSpecs(\n      prevPropValue,\n      subSpecs,\n      args,\n      path + prop + \".\"\n    );\n  }\n\n  // there is something changed\n  if (modifier && modifier.original !== modifier.value) {\n    nextPropValue = modifier.value;\n  }\n\n  if (returnSpecs) {\n    returnValue[prop] = nextPropValue;\n    return nextState;\n  }\n\n  if (\n    nextPropValue !== prevPropValue &&\n    !arrayEqual(nextPropValue, prevPropValue)\n  ) {\n    if (nextState === state) {\n      nextState = cloneObject(state);\n    }\n    if (isNestedProps) {\n      const stack = [];\n      let container = nextState;\n      for (let i = 0; i < props.length; i++) {\n        let prev = { container, prop: props[i] };\n        stack.push(prev);\n        prev.container[prev.prop] = container = cloneObject(\n          container[prev.prop]\n        );\n      }\n      const last = stack[stack.length - 1];\n      last.container[last.prop] = nextPropValue;\n    } else {\n      nextState[prop] = nextPropValue;\n    }\n  }\n  return nextState;\n}\n\nfunction processSpecs(state = {}, specs = {}, args = {}, path = \"\") {\n  let nextState = state;\n  let returnSpecs = false;\n  let returnValue = {};\n  const entries = Array.isArray(specs) ? specs.slice(0) : Object.entries(specs);\n  const length = entries.length;\n  for (let i = 0; i < length; i++) {\n    let [prop, subSpecs] = entries[i];\n\n    if (prop === \"$return\") {\n      returnSpecs = true;\n      continue;\n    }\n\n    if (!subSpecs) {\n      continue;\n    }\n    let isSpecialProp = true;\n    if (typeof prop === \"string\" && prop[0] === \"$\") {\n      if (prop === \"$args\") {\n        nextState = processArgs(state, nextState, args, prop, subSpecs, path);\n      } else if (prop === \"$self\") {\n        nextState = processSelf(state, nextState, args, prop, subSpecs, path);\n      } else if (prop === \"$one\" || prop === \"$many\") {\n        nextState = processArrayItemSpecs(\n          state,\n          nextState,\n          args,\n          prop,\n          subSpecs,\n          path\n        );\n      } else if (prop === \"$extend\") {\n        const nextSpecs = subSpecs({ value: nextState, ...args });\n        if (nextSpecs) {\n          nextState = processSpecs(\n            state,\n            nextState,\n            nextSpecs,\n            args,\n            path + prop + \".\"\n          );\n        }\n      } else if (prop[1] === \"w\" && /^\\$when/.test(prop)) {\n        nextState = processWhen(state, nextState, args, prop, subSpecs, path);\n      } else if (prop[1] === \"i\" && /^\\$if/.test(prop)) {\n        nextState = processIf(state, nextState, args, prop, subSpecs, path);\n      } else if (prop[1] === \"v\" && /^\\$var/.test(prop)) {\n        nextState = processVar(state, nextState, args, prop, subSpecs, path);\n      } else {\n        isSpecialProp = false;\n      }\n    } else {\n      isSpecialProp = false;\n    }\n\n    if (!isSpecialProp) {\n      nextState = processNormalProp(\n        state,\n        nextState,\n        args,\n        prop,\n        subSpecs,\n        returnSpecs,\n        returnValue,\n        path\n      );\n    }\n  }\n\n  return returnSpecs ? returnValue : nextState;\n}\n\nfunction getValue(path, target) {\n  return (Array.isArray(path) ? path : path.split(\".\")).reduce(\n    (target, prop) => {\n      prop = tryExtractPropNameFromAccessor(prop);\n      return typeof target === \"undefined\" || target === null\n        ? target\n        : target[prop];\n    },\n    target\n  );\n}\n\nexport default function imj(...inputs) {\n  if (inputs.length > 1) {\n    return imj(inputs[1])(inputs[0], ...inputs.slice(2));\n  }\n  const [specs = {}] = inputs;\n  return (state, ...args) => {\n    if (state instanceof Modifier) {\n      state = state.value;\n    }\n    return processSpecs(state, specs, {\n      $$: args,\n      $: state,\n      $input: args[0],\n      // automap input args to props: $1, $2, $3, ...\n      ...args.reduce((result, arg, index) => {\n        result[`$${index + 1}`] = arg;\n        return result;\n      }, {})\n    });\n  };\n}\n"],"file":"imj.js"}