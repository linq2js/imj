{"version":3,"sources":["../src/imj.js"],"names":["CloneMode","None","Unknown","Object","Array","defaultSelector","x","arrayEqual","arr1","arr2","length","isArray","every","item","index","Modifier","value","args","original","assign","result","__result","method","clone","modifiedArray","mutate","slice","some","__invoked","__orderBy","selector","sort","a","b","aValue","bValue","__reverse","__arrayProxy","__sort","comparer","__filter","predicate","__slice","from","to","__shift","prev","next","shift","__remove","keys","map","tryExtractPropNameFromAccessor","Set","Map","key","has","sortedKeys","splice","pop","forEach","__pop","__keep","reduce","set","get","obj","__unshift","values","concat","__splice","count","newItems","__unset","props","prop","__mutate","cloneMode","checker","modifier","Date","getTime","__push","__assign","newProps","finalProps","__map","mapper","clonedValue","__swap","prop1","prop2","temp","__current","__toggle","__add","d","getFullYear","years","getMonth","months","getDate","days","getHours","hours","getMinutes","minutes","getSeconds","seconds","getMilliseconds","milliseconds","__replace","findWhat","replaceWith","replace","fallback","propName","processArgs","state","nextState","subSpecs","path","join","split","arg","$$","processWhen","targetPath","targetValue","getValue","valueToCompare","targetSpecs","processSpecs","specMap","processArrayItemSpecs","many","defaultItemSpecs","undefined","found","hasChange","nextArray","itemSpecs","newItem","processIf","condition","$then","$else","isTruth","processVar","entries","varName","processSelf","cloneObject","processNormalProp","returnSpecs","returnValue","Error","imj","isNestedProps","prevPropValue","nextPropValue","stack","container","i","push","last","specs","isSpecialProp","nextSpecs","test","target","inputs","$","$input"],"mappings":"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","sourcesContent":["const CloneMode = {\n  None: 0,\n  Unknown: 1,\n  Object: 2,\n  Array: 3\n};\nconst defaultSelector = x => x;\n\nfunction arrayEqual(arr1, arr2) {\n  if (arr1 === arr2) return true;\n  if (!arr1 || !arr2 || arr1.length !== arr2.length) return false;\n  if (!Array.isArray(arr1) || Array.isArray(arr2)) return false;\n  return arr1.every((item, index) => arr2[index] === item);\n}\n\nclass Modifier {\n  constructor(value, args) {\n    this.original = value;\n    this.value = value;\n    Object.assign(this, args, {\n      result: () => this.__result\n    });\n  }\n\n  get orderBy() {\n    this.__invoked = true;\n    return (\n      this.__orderBy ||\n      (this.__orderBy = selector => {\n        return this.sort((a, b) => {\n          const aValue = selector(a);\n          const bValue = selector(b);\n          if (aValue > bValue) {\n            return 1;\n          }\n          return aValue === bValue ? 0 : -1;\n        });\n      })\n    );\n  }\n\n  get reverse() {\n    this.__invoked = true;\n    return (\n      this.__reverse ||\n      (this.__reverse = () => {\n        return this.__arrayProxy(\"reverse\", true);\n      })\n    );\n  }\n\n  get sort() {\n    this.__invoked = true;\n    return (\n      this.__sort ||\n      (this.__sort = comparer => {\n        return this.__arrayProxy(\"sort\", true, [comparer]);\n      })\n    );\n  }\n\n  get filter() {\n    this.__invoked = true;\n    return (\n      this.__filter ||\n      (this.__filter = predicate => {\n        return this.__arrayProxy(\"filter\", false, [predicate]);\n      })\n    );\n  }\n\n  get slice() {\n    this.__invoked = true;\n    return (\n      this.__slice ||\n      (this.__slice = (from, to) => {\n        return this.__arrayProxy(\"slice\", false, [from, to]);\n      })\n    );\n  }\n\n  get shift() {\n    this.__invoked = true;\n    return (\n      this.__shift ||\n      (this.__shift = () => {\n        return this.mutate(\n          CloneMode.Array,\n          prev => prev && prev.length,\n          next => next.shift()\n        );\n      })\n    );\n  }\n\n  get remove() {\n    this.__invoked = true;\n    return (\n      this.__remove ||\n      (this.__remove = (...keys) => {\n        keys = keys.map(tryExtractPropNameFromAccessor);\n\n        return this.mutate(\n          CloneMode.Unknown,\n          prev =>\n            prev &&\n            (prev instanceof Set || prev instanceof Map\n              ? keys.some(key => prev.has(key))\n              : keys.some(key => key in prev)),\n          next => {\n            if (Array.isArray(next)) {\n              const sortedKeys = keys.sort();\n              while (sortedKeys.length) {\n                next.splice(sortedKeys.pop(), 1);\n              }\n            } else if (next instanceof Map || next instanceof Set) {\n              keys.forEach(key => next.delete(key));\n            } else {\n              keys.forEach(key => delete next[key]);\n            }\n          }\n        );\n      })\n    );\n  }\n\n  get pop() {\n    this.__invoked = true;\n    return (\n      this.__pop ||\n      (this.__pop = () => {\n        return this.mutate(\n          CloneMode.Array,\n          prev => prev && prev.length,\n          next => next.pop()\n        );\n      })\n    );\n  }\n\n  get keep() {\n    this.__invoked = true;\n    return (\n      this.__keep ||\n      (this.__keep = (...keys) => {\n        keys = keys.map(tryExtractPropNameFromAccessor);\n        return this.mutate(\n          CloneMode.Unknown,\n          () => true,\n          prev => prev,\n          next => {\n            if (next instanceof Map) {\n              return keys.reduce((map, key) => {\n                map.set(key, next.get(key));\n                return map;\n              }, new Map());\n            }\n\n            if (Array.isArray(next)) {\n              return keys.map(key => next[key]);\n            }\n\n            if (typeof next === \"undefined\" || next === null) {\n              return {};\n            }\n\n            return keys.reduce((obj, key) => {\n              obj[key] = next[key];\n              return obj;\n            }, {});\n          }\n        );\n      })\n    );\n  }\n\n  get unshift() {\n    this.__invoked = true;\n    return (\n      this.__unshift ||\n      (this.__unshift = (...values) => {\n        return this.mutate(\n          CloneMode.None,\n          () => !!values.length,\n          next => values.concat(next || [])\n        );\n      })\n    );\n  }\n\n  get splice() {\n    this.__invoked = true;\n    return (\n      this.__splice ||\n      (this.__splice = (index, count, ...newItems) => {\n        return this.mutate(\n          CloneMode.Array,\n          prev => prev && ((count && prev.length > index) || newItems.length),\n          next => next.splice(index, count, ...newItems)\n        );\n      })\n    );\n  }\n\n  get unset() {\n    this.__invoked = true;\n    return (\n      this.__unset ||\n      (this.__unset = (...props) => {\n        props = props.map(tryExtractPropNameFromAccessor);\n        return this.mutate(\n          CloneMode.Unknown,\n          prev => prev && props.some(prop => prop in prev),\n          next => props.forEach(prop => delete next[prop])\n        );\n      })\n    );\n  }\n\n  get mutate() {\n    this.__invoked = true;\n    return (\n      this.__mutate ||\n      (this.__mutate = (\n        cloneMode,\n        checker,\n        modifier,\n        selector = defaultSelector\n      ) => {\n        let value = this.value;\n\n        // do nothing\n        if (!checker(value)) {\n          return this;\n        }\n\n        if (cloneMode && value === this.original) {\n          if (typeof value === \"undefined\" || value === null) {\n            value = cloneMode === CloneMode.Array ? [] : {};\n          } else if (Array.isArray(value)) {\n            value = selector(value).slice(0);\n          } else if (value instanceof Date) {\n            value = new Date(value.getTime());\n          } else if (value instanceof Set) {\n            value = new Set(selector(value));\n          } else if (value instanceof Map) {\n            value = new Map(selector(value));\n          } else if (typeof value === \"object\") {\n            value = Object.assign({}, selector(value));\n          }\n        }\n\n        const next = modifier(value);\n        if (cloneMode) {\n          this.value = value;\n          this.__result = next;\n        } else {\n          this.value = next;\n        }\n\n        return this;\n      })\n    );\n  }\n\n  get push() {\n    this.__invoked = true;\n    return (\n      this.__push ||\n      (this.__push = (...values) => {\n        return this.mutate(\n          CloneMode.None,\n          () => values.length,\n          next => [].concat(next || []).concat(values)\n        );\n      })\n    );\n  }\n\n  get assign() {\n    this.__invoked = true;\n    return (\n      this.__assign ||\n      (this.__assign = (...newProps) => {\n        const finalProps = Object.assign({}, ...newProps);\n        return this.mutate(\n          CloneMode.Object,\n          prev =>\n            !prev ||\n            Object.keys(finalProps).some(key => finalProps[key] !== prev[key]),\n          next => Object.assign(next, finalProps)\n        );\n      })\n    );\n  }\n\n  get map() {\n    this.__invoked = true;\n    return (\n      this.__map ||\n      (this.__map = mapper => {\n        let clonedValue;\n        return this.mutate(\n          CloneMode.None,\n          prev => {\n            if (!prev) return true;\n            clonedValue = prev.map(mapper);\n            return !arrayEqual(clonedValue, prev);\n          },\n          () => clonedValue\n        );\n      })\n    );\n  }\n\n  get swap() {\n    this.__invoked = true;\n    return (\n      this.__swap ||\n      (this.__swap = (prop1, prop2) =>\n        this.mutate(\n          CloneMode.Unknown,\n          prev => !prev || prev[prop1] !== prev[prop2],\n          next => {\n            const temp = next[prop1];\n            next[prop1] = next[prop2];\n            next[prop2] = temp;\n          }\n        ))\n    );\n  }\n\n  get current() {\n    return this.__current || (this.__current = () => this.value);\n  }\n\n  get toggle() {\n    this.__invoked = true;\n    return (\n      this.__toggle ||\n      (this.__toggle = () => {\n        this.value = !this.value;\n        return this;\n      })\n    );\n  }\n\n  get add() {\n    this.__invoked = true;\n    return (\n      this.__add ||\n      (this.__add = (value = 1) => {\n        if (\n          this.value instanceof Date ||\n          (typeof this.value === \"string\" && typeof value !== \"string\")\n        ) {\n          const d = new Date(this.value);\n          this.value = new Date(\n            d.getFullYear() + (value.years || 0),\n            d.getMonth() + (value.months || 0),\n            d.getDate() + (value.days || 0),\n            d.getHours() + (value.hours || 0),\n            d.getMinutes() + (value.minutes || 0),\n            d.getSeconds() + (value.seconds || 0),\n            d.getMilliseconds() + (value.milliseconds || 0)\n          );\n        } else {\n          this.value += value;\n        }\n        return this;\n      })\n    );\n  }\n\n  get replace() {\n    this.__invoked = true;\n    return (\n      this.__replace ||\n      (this.__replace = (findWhat, replaceWith) =>\n        this.mutate(\n          CloneMode.None,\n          () => true,\n          next => next.replace(findWhat, replaceWith)\n        ))\n    );\n  }\n\n  __arrayProxy(method, clone, args = []) {\n    let modifiedArray;\n    return this.mutate(\n      CloneMode.None,\n      original => {\n        if (typeof original === \"undefined\" || original === null) {\n          original = [];\n        }\n        modifiedArray = (clone ? original.slice(0) : original)[method](...args);\n        return (\n          modifiedArray.length !== original.length ||\n          modifiedArray.some((item, index) => item !== original[index])\n        );\n      },\n      () => modifiedArray\n    );\n  }\n}\n\nfunction tryExtractPropNameFromAccessor(prop, fallback) {\n  if (typeof prop === \"function\" && prop.propName) {\n    return prop.propName;\n  }\n  return typeof fallback === \"function\" ? fallback(prop) : prop;\n}\n\nfunction processArgs(state, nextState, args, prop, subSpecs, path) {\n  (Array.isArray(subSpecs) ? subSpecs.join(\" \") : subSpecs)\n    .split(/\\s+/)\n    .forEach((arg, index) => (args[arg] = args.$$[index]));\n  return nextState;\n}\n\nfunction processWhen(state, nextState, args, prop, subSpecs, path) {\n  const [targetPath] = subSpecs;\n  const targetValue = getValue(targetPath, { value: nextState, ...args });\n  // $when: ['target.value', valueToCompare, specs]\n  if (subSpecs.length > 2) {\n    const [, valueToCompare, targetSpecs] = subSpecs;\n    if (targetSpecs && targetValue === valueToCompare) {\n      nextState = processSpecs(nextState, targetSpecs, args, path + \".\");\n    }\n  } else {\n    // $when: ['target.value', { spec map }]\n    const [, specMap = {}] = subSpecs;\n    const targetSpecs = specMap[targetValue];\n    if (targetSpecs) {\n      nextState = processSpecs(nextState, targetSpecs, args, path + \".\");\n    }\n  }\n\n  return nextState;\n}\n\nfunction processArrayItemSpecs(state, nextState, args, prop, subSpecs, path) {\n  if (Array.isArray(nextState)) {\n    const many = prop === \"$many\";\n    const defaultItemSpecs =\n      typeof subSpecs === \"function\" ? undefined : subSpecs;\n    let found = false;\n    let hasChange = false;\n    const nextArray = nextState.map((item, index) => {\n      if (found && !many) {\n        return item;\n      }\n      const itemSpecs =\n        defaultItemSpecs || subSpecs({ value: item, index, ...args });\n      if (!itemSpecs) return item;\n      found = true;\n      const newItem = processSpecs(item, itemSpecs, args, path + \".\" + index);\n      if (newItem !== item) {\n        hasChange = true;\n      }\n      return newItem;\n    });\n    if (hasChange) {\n      nextState = nextArray;\n    }\n  }\n  return nextState;\n}\n\nfunction processIf(state, nextState, args, prop, subSpecs, path) {\n  const [condition, $then, $else] = subSpecs;\n  const isTruth =\n    typeof condition === \"function\"\n      ? condition({ value: nextState, ...args })\n      : condition;\n\n  if (isTruth) {\n    if ($then) {\n      nextState = processSpecs(nextState, $then, args, path + \".\");\n    }\n  } else if ($else) {\n    nextState = processSpecs(nextState, $else, args, path + \".\");\n  }\n  return nextState;\n}\n\nfunction processVar(state, nextState, args, prop, subSpecs, path) {\n  if (typeof subSpecs === \"function\") {\n    Object.assign(args, subSpecs({ value: nextState, ...args }));\n  } else {\n    Object.entries(subSpecs).forEach(([varName, path]) => {\n      path = tryExtractPropNameFromAccessor(path);\n      args[varName] =\n        typeof path === \"function\"\n          ? path({ value: nextState, ...args })\n          : getValue(path, nextState);\n    });\n  }\n  return nextState;\n}\n\nfunction processSelf(state, nextState, args, prop, subSpecs, path) {\n  let modifier = new Modifier(nextState, args);\n  nextState = subSpecs(modifier);\n  if (modifier && modifier.original !== modifier.value) {\n    nextState = modifier.value;\n  }\n\n  return nextState;\n}\n\nfunction cloneObject(state) {\n  return Array.isArray(state)\n    ? state.slice(0)\n    : state instanceof Map\n    ? new Map(state)\n    : Object.assign({}, state);\n}\n\nfunction processNormalProp(\n  state,\n  nextState,\n  args,\n  prop,\n  subSpecs,\n  returnSpecs,\n  returnValue,\n  path\n) {\n  if (\n    typeof subSpecs === \"object\" ||\n    typeof subSpecs === \"string\" ||\n    Array.isArray(subSpecs) ||\n    typeof subSpecs === \"function\"\n  ) {\n    // valid specs type\n  } else {\n    throw new Error(\n      `Invalid specs: ${path +\n        prop}. Sub specs should be object, array or function`\n    );\n  }\n\n  if (returnSpecs && typeof subSpecs !== \"function\") {\n    returnValue[prop] = imj(subSpecs);\n    return nextState;\n  }\n\n  // console.log(returnSpecs, prop, subSpecs);\n\n  const props = Array.isArray(prop)\n    ? prop.map(tryExtractPropNameFromAccessor)\n    : tryExtractPropNameFromAccessor(prop).split(\".\");\n  const isNestedProps = props.length > 1;\n\n  prop = props[0];\n  let modifier;\n\n  const prevPropValue = isNestedProps\n    ? getValue(props, nextState)\n    : nextState[prop];\n  let nextPropValue;\n\n  if (typeof subSpecs === \"function\") {\n    modifier = new Modifier(prevPropValue, args);\n    nextPropValue = subSpecs(modifier);\n  } else if (typeof subSpecs === \"string\") {\n    nextPropValue = getValue(subSpecs, { value: prevPropValue, ...args });\n  } else {\n    nextPropValue = processSpecs(\n      prevPropValue,\n      subSpecs,\n      args,\n      path + prop + \".\"\n    );\n  }\n\n  // there is something changed\n  if (modifier && modifier.__invoked) {\n    nextPropValue = modifier.value;\n  } else if (nextPropValue instanceof Modifier) {\n    nextPropValue = nextPropValue.value;\n  }\n\n  if (returnSpecs) {\n    returnValue[prop] = nextPropValue;\n    return nextState;\n  }\n\n  if (\n    nextPropValue !== prevPropValue &&\n    !arrayEqual(nextPropValue, prevPropValue)\n  ) {\n    if (nextState === state) {\n      nextState = cloneObject(state);\n    }\n    if (isNestedProps) {\n      const stack = [];\n      let container = nextState;\n      for (let i = 0; i < props.length; i++) {\n        let prev = { container, prop: props[i] };\n        stack.push(prev);\n        prev.container[prev.prop] = container = cloneObject(\n          container[prev.prop]\n        );\n      }\n      const last = stack[stack.length - 1];\n      last.container[last.prop] = nextPropValue;\n    } else {\n      nextState[prop] = nextPropValue;\n    }\n  }\n  return nextState;\n}\n\nfunction processSpecs(state = {}, specs = {}, args = {}, path = \"\") {\n  let nextState = state;\n  let returnSpecs = false;\n  let returnValue = {};\n  const entries = Array.isArray(specs) ? specs.slice(0) : Object.entries(specs);\n  const length = entries.length;\n  for (let i = 0; i < length; i++) {\n    let [prop, subSpecs] = entries[i];\n\n    if (prop === \"$return\") {\n      returnSpecs = true;\n      continue;\n    }\n\n    if (!subSpecs) {\n      continue;\n    }\n    let isSpecialProp = true;\n    if (typeof prop === \"string\" && prop[0] === \"$\") {\n      if (prop === \"$args\") {\n        nextState = processArgs(state, nextState, args, prop, subSpecs, path);\n      } else if (prop === \"$self\") {\n        nextState = processSelf(state, nextState, args, prop, subSpecs, path);\n      } else if (prop === \"$one\" || prop === \"$many\") {\n        nextState = processArrayItemSpecs(\n          state,\n          nextState,\n          args,\n          prop,\n          subSpecs,\n          path\n        );\n      } else if (prop === \"$extend\") {\n        const nextSpecs = subSpecs({ value: nextState, ...args });\n        if (nextSpecs) {\n          nextState = processSpecs(\n            state,\n            nextState,\n            nextSpecs,\n            args,\n            path + prop + \".\"\n          );\n        }\n      } else if (prop[1] === \"w\" && /^\\$when/.test(prop)) {\n        nextState = processWhen(state, nextState, args, prop, subSpecs, path);\n      } else if (prop[1] === \"i\" && /^\\$if/.test(prop)) {\n        nextState = processIf(state, nextState, args, prop, subSpecs, path);\n      } else if (prop[1] === \"v\" && /^\\$var/.test(prop)) {\n        nextState = processVar(state, nextState, args, prop, subSpecs, path);\n      } else {\n        isSpecialProp = false;\n      }\n    } else {\n      isSpecialProp = false;\n    }\n\n    if (!isSpecialProp) {\n      nextState = processNormalProp(\n        state,\n        nextState,\n        args,\n        prop,\n        subSpecs,\n        returnSpecs,\n        returnValue,\n        path\n      );\n    }\n  }\n\n  return returnSpecs ? returnValue : nextState;\n}\n\nfunction getValue(path, target) {\n  return (Array.isArray(path) ? path : path.split(\".\")).reduce(\n    (target, prop) => {\n      prop = tryExtractPropNameFromAccessor(prop);\n      return typeof target === \"undefined\" || target === null\n        ? target\n        : target[prop];\n    },\n    target\n  );\n}\n\nexport default function imj(...inputs) {\n  if (inputs.length > 1) {\n    return imj(inputs[1])(inputs[0], ...inputs.slice(2));\n  }\n  const [specs = {}] = inputs;\n  return (state, ...args) => {\n    if (state instanceof Modifier) {\n      state = state.value;\n    }\n    return processSpecs(state, specs, {\n      $$: args,\n      $: state,\n      $input: args[0],\n      // automap input args to props: $1, $2, $3, ...\n      ...args.reduce((result, arg, index) => {\n        result[`$${index + 1}`] = arg;\n        return result;\n      }, {})\n    });\n  };\n}\n"],"file":"imj.js"}